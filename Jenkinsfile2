pipeline{
	
	agent {label 'vagrant-worker'}
	tools {
  			terraform 'terraform'
		}
	stages{
		stage('Install Terraform'){
		  steps{
			script{
				def terraformOK  = fileExists '/usr/bin/terraform'
				if (terraformOK) {
					echo 'Skipping install terraform...already installed'
				}else{
					sh '''#!/bin/bash
				    	sudo apt-get install -y gnupg software-properties-common curl
                  			curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
                 			sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
                  			sudo apt-get update && sudo apt-get install terraform
                  
               			 '''	
			  }
		      }
		}
	    }
		
		
		stage('removing previous clone if exists'){
		steps{
		    script{
		      def dirExists  = fileExists '$WORKSPACE/terraform-docker-nginx/'
			   if (dirExists){
				 sh 'rm -rf $WORKSPACE/terraform-docker-nginx/'	    
			       }
	   	     }
		   }		
	  	 }
		 
		 
		stage('Git Checkout Repo'){ 
			steps{
			script{
				def repoCloned  = fileExists '$WORKSPACE/terraform-docker-nginx'
				 if (repoCloned){
					  sh 'rm -rf $WORKSPACE/terraform-docker-nginx'
				    }else{

					 echo "$JOB_NAME"     
					}
			  		sh 'rm -rf $WORKSPACE/terraform-docker-nginx'
					git branch: 'main', credentialsId: 'gitHub', url: 'https://github.com/abdallauno1/terraform-docker-nginx'
				}
			  }
			}
			
			stage('Terraform Init'){
				steps{
					sh 'terraform init'
				}
			}
			
			stage('Terraform Apply'){
				steps{
					sh 'terraform apply --auto-approve'
				}
			}


		}
	}
